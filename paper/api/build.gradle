description = "API parent module"

def crescentcore_version = project.findProperty('crescentcore_api_version')
def crescent_common_version = project.findProperty('crescent_common_version')
def artifacts_version = project.findProperty('artifacts_api_version')
def crystals_version = project.findProperty('crystals_api_version')

void addRepositories(Project project) {
    project.repositories {
        mavenCentral()
        maven { url = uri('https://repo.papermc.io/repository/maven-public/') }
        maven { url = uri('https://crescentsun.it/reposilite/releases') }
    }
}

subprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'

    addRepositories(project)

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    project.version = [
            "crescent-core"            : crescentcore_version,
            "crescent-common"     : crescent_common_version,
            "artifacts"                      : artifacts_version,
            "crystals"                       : crystals_version
    ].get(project.name)
    project.group = "it.crescentsun.api"
    project.description = project.description ?: "No description provided"

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
    }
    tasks.withType(Javadoc).configureEach {
        options.encoding = 'UTF-8'
    }
    tasks.register("sourcesJar", Jar) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    build {
        group = 'always-used'
        dependsOn(sourcesJar)
    }
    publish {
        group = 'always-used'
    }

    dependencies {
        if (!project.name.equalsIgnoreCase("crescent-common")) {
            compileOnly libs.paper.api
            api libs.crescent.common
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                artifactId = project.name

                // Include the sources JAR
                artifact tasks.named('sourcesJar').get()

                // POM configuration
                pom {
                    name.set(project.name)
                    description.set(project.description)
                    url.set("https://crescentsun.it/reposilite/releases")
                    scm {
                        connection.set("scm:git:git://crescentsun.it/reposilite/.git")
                        developerConnection.set("scm:git:ssh://crescentsun.it/reposilite/" + project.name + ".git")
                        url.set("https://crescentsun.it/reposilite/" + project.name)
                    }
                    licenses {
                        license {
                            name.set('The Apache License, Version 2.0')
                            url.set('https://www.apache.org/licenses/LICENSE-2.0.txt')
                        }
                    }
                    developers {
                        developer {
                            id.set('crescentsun')
                            name.set('Klyser8')
                            email.set('klyser8.official@gmail.com')
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name = "CrescentSun"
                url = uri("https://crescentsun.it/reposilite/releases")
                credentials(PasswordCredentials)
                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
    }
}

tasks.register("publishAll") {
    group = 'always-used'
    description = 'Publishes all subprojects'
    dependsOn(subprojects.collect { it.tasks.named("publish") })
}